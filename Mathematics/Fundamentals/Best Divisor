/* Contributer : github.com/Shaurya9619
	   Email : shaurya96gairola@gmail.com
*/
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;
int main(void)
{
    int n;
    cin >> n;

    double root = sqrt(n);
    int k = 2*root;
    vector<int> divisors(k, 0);
    int i = 0;

    divisors[i++] = 1;
    divisors[--k] = n;
    for (int d = 2; d <= root; ++d)
    {
        if (n%d == 0)
        {
            divisors[i++] = d;
            divisors[--k] = n/d;
        }
    }

    int best = 0;
    int m = 0;
    for (i = 0; i < divisors.size(); ++i)
    {
        int sum = 0;
        for (int x = divisors[i]; x > 0; x /= 10)
            sum += x%10;

        if (sum > m)
        {
            m = sum;
            best = divisors[i];
        }
    }

    cout << best << endl;
}
